name: Build on Push

on:
  push:
    branches:
      - main  # 监听主分支的推送事件

permissions:
  contents: write
  packages: write
  id-token: write  # 添加OIDC令牌支持

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'  # 指定 package-lock.json 的路径

      - name: Install dependencies
        working-directory: ./frontend  # 设置工作目录
        run: npm install --legacy-peer-deps

      - name: Build
        working-directory: ./frontend  # 设置工作目录
        run: npm run build

      - name: Zip build files
        run: |
          cd frontend/build
          zip -r ../../release.zip .
          cd ../..

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          files: |
            release.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password or access token

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:${{ github.event.inputs.version || github.ref_name }}
            docker.io/${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest-beta
